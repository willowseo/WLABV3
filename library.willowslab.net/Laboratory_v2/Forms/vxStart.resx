<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/8voAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////AAAA
        AAAAAAAAAAAAAAAAAAD57BHv+v4AAAAAAAAAAAAAAAAAAAAAAP//+/MTExMT/wAAAAAAAAAAAAAAAAAA
        AAD/9/Hs7PL9//8AAAAAAAAAAAAAAAAA+vL2ChERERER/gAA+PgA//b5//YH8vH6AAAAAP757hH59PP8
        AAAAAAAAAAAA/vnxEezx9RH2/Pz8AAAA+O/5+O76++717fHwAAAAAAAA9RH37+wRE/v/AAAAAP/68uwR
        8ff+9RH5AAAAAAAA/O0H8O/9+/D67wrwAAAAAAAA9RH5/fbwEe3z+/8A//btEe/4/gAA9RH5AAAAAAAA
        /gcK9BP/+/D67wrwAAAAAAAA9RH5AAD99u0R7vgA//btEe73/QAA9RH5AAAAAAAA//Tx7/YA+/D67wrw
        AAAAAAAA9RH5AP/99e0R7vgAAP/68u0RB/f99RH5AAAAAAAAAPju7foA+/D7CvfwAAAAAAAA9RH5/Arv
        Ee30+wAAAAAA/vryEewH9RH5AAAAAAAAAPzu7/4A+/D9//jwAAD/+/v7ExH37uwR9Pv/AAAAAAAAAAAA
        +/L3ChHv+v4AAAAAAP/xEwAA+wf9APnwAAD6ERERERH59PT9AAAAAAAAAAAAAAAAAP//+/Hs7PL4/wAA
        AAD6+wAA/vn/AP35AAD98/Pz9PX9/wAAAAAAAAAAAAAAAAAAAAAAAP757xHs/AAAAAAAAAAAAAAAAAAA
        AAAA/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//n0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//
</value>
  </data>
</root>